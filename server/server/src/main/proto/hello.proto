syntax = "proto3";

package hello;

import "google/protobuf/timestamp.proto";

message Product {
  string productID = 1;
  string productName = 2;
  string productCategory = 3;
  int32 productQuantity = 4;
  string productUnit = 5;
}

message WarehouseData {
  string warehouseID = 1;
  string warehouseName = 2;
  google.protobuf.Timestamp timestamp = 3; // Use Timestamp for the time
  repeated Product products = 4;
}

service HelloWorldService {
  rpc hello(HelloRequest) returns (HelloResponse) {}
  rpc requestWarehouseData(WarehouseRequest) returns (WarehouseData) {}
}

message WarehouseRequest {
  string warehouseID = 1;
}

message HelloRequest {
  string firstname = 1;
  string lastname = 2;
}

message HelloResponse {
  string text = 1;
}

// Health check messages
message PingMessage {
  string clientID = 1;
  google.protobuf.Timestamp timestamp = 2; // Timestamp when the Ping was sent or responded to
  // Additional field to indicate health status or leave empty for server-initiated pings
  string status = 3; // "healthy" for client responses, or "no response" for server-logged failures
}

// Health check service using bi-directional streaming for continuous communication
service HealthCheckService {
  rpc CheckHealth(stream PingMessage) returns (stream PingMessage);
}
